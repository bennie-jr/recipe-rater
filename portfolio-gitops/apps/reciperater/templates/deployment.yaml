apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  namespace: default
  labels:
    app: {{ .Values.appName }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "http"
      labels:
        app: {{ .Values.appName }}
    spec:
      containers:
        - name: {{ .Values.appName }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.containerPort }}
          envFrom:
            - configMapRef:
                name: {{ .Values.configMapName }}
            - secretRef:
                name: {{ .Values.secret.name }}
          env:
            - name: USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: mongodb-usernames
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: mongodb-passwords
            - name: DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: mongodb-databases
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: MONGO_URI

        - name: {{ .Values.appNginxName }}
          image: "{{ .Values.imageNginx.repository }}:{{ .Values.imageNginx.tag }}"
          imagePullPolicy: {{ .Values.imageNginx.pullPolicy }}
          ports:
            - containerPort: {{ .Values.port }}
          volumeMounts:
            - name: {{ .Values.nginxVolumeName }}
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: {{ .Values.nginxVolumeName }}
          configMap:
            name: {{ .Values.nginxConfigMapName }}